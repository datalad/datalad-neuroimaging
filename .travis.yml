# vim ft=yaml
# travis-ci.org definition for DataLad build
language: python

git:
  # we use submodules to be managed with datalad
  submodules: false

python:
  - 2.7
  - 3.5
  - 3.6

cache:
  - apt

env:
  global:
    # will be used in the matrix, where neither other variable is used
    - BOTO_CONFIG=/tmp/nowhere
    - DATALAD_TESTS_SSH=1
    - DATALAD_LOG_CMD_ENV=GIT_SSH_COMMAND
    - TESTS_TO_PERFORM=
    - NOSE_OPTS=-s
    - NOSE_SELECTION_OP="not "   # so it would be "not (integration or usecase)"
    # Special settings/helper for combined coverage from special remotes execution
    - COVERAGE=coverage
    - DATALAD_DATASETS_TOPURL=http://datasets-tests.datalad.org
  matrix:
    - DATALAD_REPO_VERSION=5
    - DATALAD_REPO_VERSION=6

matrix:
  include:
  - python: 2.7
    env:
    - DATALAD_REPO_VERSION=5
    - _DL_UPSTREAM_DATALAD=1
    - _DL_UPSTREAM_HEUDICONV=1
  - python: 3.6
    env:
    - DATALAD_REPO_VERSION=5
    - _DL_UPSTREAM_DATALAD=1
    - _DL_UPSTREAM_HEUDICONV=1
before_install:
  # Just in case we need to check if nfs is there etc
  - sudo lsmod
  # The ultimate one-liner setup for NeuroDebian repository
  - bash <(wget -q -O- http://neuro.debian.net/_files/neurodebian-travis.sh)
  - travis_retry sudo apt-get update -qq
  - travis_retry sudo apt-get install eatmydata  # to speedup some installations
  - sudo eatmydata tools/ci/prep-travis-forssh-sudo.sh
  - tools/ci/prep-travis-forssh.sh
  # install git-annex with the relevant bits
  # no recommends to avoid inheriting the entire multimedia stack
  - travis_retry sudo eatmydata apt-get install --no-install-recommends git-annex-standalone aria2 git-remote-gcrypt lsof gnupg nocache
  # Install optionally upstream current development so we are sure that they break nothing important for us
  - if [ ! -z "${_DL_UPSTREAM_DATALAD:-}" ]; then pip install git+https://github.com/datalad/datalad.git; fi
  # heudiconv for conversion testing:
  - travis_retry sudo eatmydata apt-get install dcm2niix
  - if [ ! -z "${_DL_UPSTREAM_HEUDICONV:-}" ]; then pip install git+https://github.com/nipy/heudiconv.git; else pip install heudiconv; fi


install:
  # Install standalone build of git-annex for the recent enough version
  - travis_retry sudo eatmydata apt-get install zip pandoc
  # for metadata support
  - git config --global user.email "test@travis.land"
  - git config --global user.name "Travis Almighty"
  - cd ..; pip install -q codecov; cd -
  - pip install -r requirements.txt
  - pip install 'sphinx>=1.6.2'
  - pip install 'sphinx-rtd-theme'
  # So we could test under sudo -E with PATH pointing to installed location
  - sudo sed -i -e 's/^Defaults.*secure_path.*$//' /etc/sudoers

script:
  # Verify that setup.py build doesn't puke
  - python setup.py build
  # Test installation system-wide
  - sudo pip install -e .
  # Run tests
  - http_proxy=
    PATH=$PWD/tools/coverage-bin:$PATH
    $NOSE_WRAPPER `which nosetests` $NOSE_OPTS
      -v -A "$NOSE_SELECTION_OP(integration or usecase or slow)"
      --with-doctest
      --with-cov --cover-package datalad_neuroimaging
      --logging-level=INFO
      $TESTS_TO_PERFORM
  # Run doc examples
  - $NOSE_WRAPPER tools/testing/run_doc_examples
  - if [ ! "${DATALAD_LOG_LEVEL:-}" = 2 ]; then
        PYTHONPATH=$PWD $NOSE_WRAPPER make -C docs html doctest;
    fi
  # Report WTF information using system wide installed version
  - datalad wtf

after_success:
  - coverage combine -a /tmp/.coverage-entrypoints-*
  - codecov
